name: Deploy status action
description: 'This action sends a notification to a Slack channel based on the status of a deployment job'

inputs:
  slack-webhook-url:
    description: 'The Slack incoming webhook URL'
    required: true
  status:
    description: 'The status of the deployment job'
    required: true
  app-url:
    description: 'The URL of the deployed application'
    required: true
  get-parameter:
    description: 'An optional parameter for additional customization. If this parameter is provided, it will be added to the app-url'
  service-name:
    description: 'Specify the service name if your application consists of microservices'

runs:
  using: 'composite'

  steps:
    - name: Define Notification Title
      run: |
        service_name=""
        if [ -n "${{inputs.service-name}}" ]; then
          service_name="(${{inputs.service-name}})"
        fi
        
        if [ "${{inputs.status}}" = "success" ]; then
          echo "title=The application <https://${{inputs.app-url}}${{inputs.get-parameter}}|${{inputs.app-url}}>${service_name} has been successfully deployed 💚" >> $GITHUB_ENV
        else
          echo "title=The deployment of <https://${{inputs.app-url}}${{inputs.get-parameter}}|${{inputs.app-url}}>${service_name} ended with an error ❤️" >> $GITHUB_ENV
        fi
      shell: bash

    - name: Send Slack Notification
      uses: 8398a7/action-slack@v3.15.1
      with:
        status: custom
        custom_payload: |
          {
            "attachments": [
              {
                "title": "${{env.title}}",          
                "color": "${{inputs.status}}" === "success" ? "good" : "${{inputs.status}}" === "failure" ? "danger" : "warning",
                "text": "Jobs logs available by <${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}|URL>."
              }
            ]
          }
      env:
        SLACK_WEBHOOK_URL: ${{inputs.slack-webhook-url}}
